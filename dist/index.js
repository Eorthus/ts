"use strict";
const getArgs = () => {
    const arg = +process.argv.slice(2);
    if (arg) {
        return arg;
    }
    return undefined;
};
const minus = (arg) => {
    if (arg) {
        arg--;
        console.log(arg);
        return (arg);
    }
    else {
        return undefined;
    }
};
const main = () => {
    let arg = getArgs();
    if (arg) {
        let timer = setInterval(() => {
            if (arg == 0)
                clearInterval(timer);
            else {
                arg = minus(arg);
            }
        }, 1000);
    }
    else {
        console.log('Введите число');
    }
};
main();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sT0FBTyxHQUFDLEdBQW1CLEVBQUU7SUFDaEMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVuQyxJQUFJLEdBQUcsRUFBQztRQUNQLE9BQU8sR0FBRyxDQUFBO0tBQ1Y7SUFDQSxPQUFPLFNBQVMsQ0FBQztBQUNyQixDQUFDLENBQUE7QUFFRCxNQUFNLEtBQUssR0FBQyxDQUFDLEdBQW9CLEVBQUMsRUFBRTtJQUNwQyxJQUFJLEdBQUcsRUFBQztRQUNKLEdBQUcsRUFBRSxDQUFDO1FBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNqQixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUE7S0FDZjtTQUFLO1FBQ0YsT0FBTyxTQUFTLENBQUM7S0FDcEI7QUFFRCxDQUFDLENBQUE7QUFFRCxNQUFNLElBQUksR0FBQyxHQUFFLEVBQUU7SUFDWCxJQUFJLEdBQUcsR0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNsQixJQUFJLEdBQUcsRUFBQztRQUNJLElBQUssS0FBSyxHQUFnQixXQUFXLENBQUMsR0FBRSxFQUFFO1lBQzlDLElBQUksR0FBRyxJQUFFLENBQUM7Z0JBQUUsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFBO2lCQUM1QjtnQkFDRixHQUFHLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ2xCO1FBRUwsQ0FBQyxFQUFDLElBQUksQ0FBQyxDQUFDO0tBQ1g7U0FBSztRQUNGLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztLQUNqQztBQUNMLENBQUMsQ0FBQTtBQUNELElBQUksRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2V0QXJncz0oKTpudW1iZXJ8dW5kZWZpbmVkPT57XHJcbiAgIGNvbnN0IGFyZyA9ICtwcm9jZXNzLmFyZ3Yuc2xpY2UoMik7XHJcblxyXG4gICBpZiAoYXJnKXtcclxuICAgIHJldHVybiBhcmdcclxuICAgfSBcclxuICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbmNvbnN0IG1pbnVzPShhcmc6bnVtYmVyfHVuZGVmaW5lZCk9PntcclxuaWYgKGFyZyl7XHJcbiAgICBhcmctLTtcclxuICAgIGNvbnNvbGUubG9nKGFyZyk7XHJcbiAgICByZXR1cm4gKGFyZylcclxufSBlbHNle1xyXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcclxufVxyXG5cclxufVxyXG5cclxuY29uc3QgbWFpbj0oKT0+e1xyXG4gICAgbGV0IGFyZz1nZXRBcmdzKCk7XHJcbiAgICBpZiAoYXJnKXtcclxuICAgICAgICAgICAgICAgIGxldCAgdGltZXI6Tm9kZUpTLlRpbWVyID0gc2V0SW50ZXJ2YWwoKCk9PntcclxuICAgICAgICAgICAgaWYgKGFyZz09MCkgY2xlYXJJbnRlcnZhbCh0aW1lcilcclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICBhcmcgPSBtaW51cyhhcmcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBcclxuICAgICAgICB9LDEwMDApO1xyXG4gICAgfSBlbHNle1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCfQktCy0LXQtNC40YLQtSDRh9C40YHQu9C+ZScpO1xyXG4gICAgfVxyXG59XHJcbm1haW4oKTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl19